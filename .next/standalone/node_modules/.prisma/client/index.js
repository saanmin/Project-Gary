
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/library.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.3.0
 * Query Engine version: acc0b9dd43eb689cbd20c9470515d719db10d0b0
 */
Prisma.prismaVersion = {
  client: "6.3.0",
  engine: "acc0b9dd43eb689cbd20c9470515d719db10d0b0"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}




  const path = require('path')

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.PensionCompanyInfoScalarFieldEnum = {
  companyId: 'companyId',
  companyName: 'companyName',
  baseDate: 'baseDate',
  companyBondRating: 'companyBondRating',
  salaryEstimationMethod: 'salaryEstimationMethod',
  yearsAddedOverRetirement: 'yearsAddedOverRetirement',
  isUnder300Employees: 'isUnder300Employees',
  useStandardRate: 'useStandardRate'
};

exports.Prisma.PensionJobTypeInfoScalarFieldEnum = {
  companyName: 'companyName',
  baseDate: 'baseDate',
  jobType: 'jobType',
  jobTypeName: 'jobTypeName',
  retirementAge: 'retirementAge',
  baseUp: 'baseUp'
};

exports.Prisma.PensionEmployeeInfoScalarFieldEnum = {
  companyName: 'companyName',
  baseDate: 'baseDate',
  employeeId: 'employeeId',
  gender: 'gender',
  birthDate: 'birthDate',
  hireDate: 'hireDate',
  calculationStartDate: 'calculationStartDate',
  averageSalary: 'averageSalary',
  jobType: 'jobType',
  paymentMultiplier: 'paymentMultiplier',
  estimatedSeverancePay: 'estimatedSeverancePay'
};

exports.Prisma.PensionFinancialAssumptionScalarFieldEnum = {
  assumptionBaseDate: 'assumptionBaseDate',
  bondType: 'bondType',
  bondRating: 'bondRating',
  maturity: 'maturity',
  yieldToMaturity: 'yieldToMaturity'
};

exports.Prisma.PensionDemographicAssumptionScalarFieldEnum = {
  assumptionBaseDate: 'assumptionBaseDate',
  demographicAssumption: 'demographicAssumption',
  age: 'age',
  demographicRate: 'demographicRate'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  PensionCompanyInfo: 'PensionCompanyInfo',
  PensionJobTypeInfo: 'PensionJobTypeInfo',
  PensionEmployeeInfo: 'PensionEmployeeInfo',
  PensionFinancialAssumption: 'PensionFinancialAssumption',
  PensionDemographicAssumption: 'PensionDemographicAssumption'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\skim590\\Documents\\Code\\05.ProjectG\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\skim590\\Documents\\Code\\05.ProjectG\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.3.0",
  "engineVersion": "acc0b9dd43eb689cbd20c9470515d719db10d0b0",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlserver",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlserver\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel PensionCompanyInfo {\n  companyId                Int                   @default(autoincrement()) @map(\"company_id\")\n  companyName              String                @map(\"company_name\") @db.NVarChar(50)\n  baseDate                 DateTime              @map(\"base_date\") @db.Date\n  companyBondRating        String                @map(\"company_bond_rating\") @db.NVarChar(50)\n  salaryEstimationMethod   Int                   @map(\"salary_estimation_method\") @db.SmallInt\n  yearsAddedOverRetirement Int?                  @map(\"years_added_over_retirement\") @db.SmallInt\n  isUnder300Employees      Int                   @map(\"is_under_300_employees\") @db.SmallInt\n  useStandardRate          Boolean               @default(true) @map(\"use_standard_rate\") @db.Bit\n  employeeInfo             PensionEmployeeInfo[]\n  jobTypeInfo              PensionJobTypeInfo[]\n\n  @@id([companyName, baseDate], map: \"PK__pension___B06B5128C1BE334D\")\n  @@map(\"pension_company_info\")\n}\n\nmodel PensionJobTypeInfo {\n  companyName   String                @map(\"company_name\") @db.NVarChar(50)\n  baseDate      DateTime              @map(\"base_date\") @db.Date\n  jobType       Int                   @map(\"job_type\") @db.SmallInt\n  jobTypeName   String                @map(\"job_type_name\") @db.NVarChar(50)\n  retirementAge Int                   @map(\"retirement_age\") @db.SmallInt\n  baseUp        Decimal               @map(\"base_up\") @db.Decimal(5, 2)\n  employeeInfo  PensionEmployeeInfo[]\n  company       PensionCompanyInfo    @relation(fields: [companyName, baseDate], references: [companyName, baseDate], onUpdate: NoAction, map: \"FK__pension_job_type__44952D46\")\n\n  @@id([companyName, baseDate, jobType], map: \"PK__pension___EBEE834EE08C74A3\")\n  @@map(\"pension_job_type_info\")\n}\n\nmodel PensionEmployeeInfo {\n  companyName           String             @map(\"company_name\") @db.NVarChar(50)\n  baseDate              DateTime           @map(\"base_date\") @db.Date\n  employeeId            String             @map(\"employee_id\") @db.NVarChar(50)\n  gender                Int                @map(\"gender\") @db.SmallInt\n  birthDate             DateTime           @map(\"birth_date\") @db.Date\n  hireDate              DateTime           @map(\"hire_date\") @db.Date\n  calculationStartDate  DateTime           @map(\"calculation_start_date\") @db.Date\n  averageSalary         Decimal            @map(\"average_salary\") @db.Decimal(12, 2)\n  jobType               Int                @map(\"job_type\") @db.SmallInt\n  paymentMultiplier     Decimal            @map(\"payment_multiplier\") @db.Decimal(5, 2)\n  estimatedSeverancePay Decimal?           @map(\"estimated_severance_pay\") @db.Decimal(12, 2)\n  company               PensionCompanyInfo @relation(fields: [companyName, baseDate], references: [companyName, baseDate], onUpdate: NoAction, map: \"FK__pension_employee__477199F1\")\n  jobTypeInfo           PensionJobTypeInfo @relation(fields: [companyName, baseDate, jobType], references: [companyName, baseDate, jobType], onUpdate: NoAction, map: \"FK__pension_employee__4865BE2A\")\n\n  @@id([companyName, baseDate, employeeId], map: \"PK__pension___19AE7F2398BBD806\")\n  @@map(\"pension_employee_info\")\n}\n\nmodel PensionFinancialAssumption {\n  assumptionBaseDate DateTime @map(\"assumption_base_date\") @db.Date\n  bondType           String   @map(\"bond_type\") @db.NVarChar(50)\n  bondRating         String   @map(\"bond_rating\") @db.NVarChar(50)\n  maturity           Decimal  @map(\"maturity\") @db.Decimal(5, 2)\n  yieldToMaturity    Decimal  @map(\"yield_to_maturity\") @db.Decimal(7, 5)\n\n  @@id([assumptionBaseDate, bondType, bondRating, maturity], map: \"PK__pension___7312B81393298282\")\n  @@map(\"pension_financial_assumption\")\n}\n\nmodel PensionDemographicAssumption {\n  assumptionBaseDate    DateTime @map(\"assumption_base_date\") @db.Date\n  demographicAssumption String   @map(\"demographic_assumption\") @db.NVarChar(50)\n  age                   Int      @map(\"age\") @db.SmallInt\n  demographicRate       Decimal  @map(\"demographic_rate\") @db.Decimal(7, 5)\n\n  @@id([assumptionBaseDate, demographicAssumption, age], map: \"PK__pension___4D2299BCAA000FC2\")\n  @@map(\"pension_demographic_assumption\")\n}\n",
  "inlineSchemaHash": "43486dfb5269a13c29802a1a2df25fc7700f652d11f9520fa7543f7487ddbd73",
  "copyEngine": true
}

const fs = require('fs')

config.dirname = __dirname
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
  const alternativePaths = [
    "node_modules/.prisma/client",
    ".prisma/client",
  ]
  
  const alternativePath = alternativePaths.find((altPath) => {
    return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'))
  }) ?? alternativePaths[0]

  config.dirname = path.join(process.cwd(), alternativePath)
  config.isBundled = true
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"PensionCompanyInfo\":{\"dbName\":\"pension_company_info\",\"schema\":null,\"fields\":[{\"name\":\"companyId\",\"dbName\":\"company_id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Int\",\"nativeType\":null,\"default\":{\"name\":\"autoincrement\",\"args\":[]},\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"companyName\",\"dbName\":\"company_name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"baseDate\",\"dbName\":\"base_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"companyBondRating\",\"dbName\":\"company_bond_rating\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"salaryEstimationMethod\",\"dbName\":\"salary_estimation_method\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"yearsAddedOverRetirement\",\"dbName\":\"years_added_over_retirement\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"isUnder300Employees\",\"dbName\":\"is_under_300_employees\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"useStandardRate\",\"dbName\":\"use_standard_rate\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":true,\"type\":\"Boolean\",\"nativeType\":[\"Bit\",[]],\"default\":true,\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"employeeInfo\",\"kind\":\"object\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionEmployeeInfo\",\"nativeType\":null,\"relationName\":\"PensionCompanyInfoToPensionEmployeeInfo\",\"relationFromFields\":[],\"relationToFields\":[],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"jobTypeInfo\",\"kind\":\"object\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionJobTypeInfo\",\"nativeType\":null,\"relationName\":\"PensionCompanyInfoToPensionJobTypeInfo\",\"relationFromFields\":[],\"relationToFields\":[],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"companyName\",\"baseDate\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"PensionJobTypeInfo\":{\"dbName\":\"pension_job_type_info\",\"schema\":null,\"fields\":[{\"name\":\"companyName\",\"dbName\":\"company_name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"baseDate\",\"dbName\":\"base_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"jobType\",\"dbName\":\"job_type\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"jobTypeName\",\"dbName\":\"job_type_name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"retirementAge\",\"dbName\":\"retirement_age\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"baseUp\",\"dbName\":\"base_up\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"5\",\"2\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"employeeInfo\",\"kind\":\"object\",\"isList\":true,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionEmployeeInfo\",\"nativeType\":null,\"relationName\":\"PensionEmployeeInfoToPensionJobTypeInfo\",\"relationFromFields\":[],\"relationToFields\":[],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"company\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionCompanyInfo\",\"nativeType\":null,\"relationName\":\"PensionCompanyInfoToPensionJobTypeInfo\",\"relationFromFields\":[\"companyName\",\"baseDate\"],\"relationToFields\":[\"companyName\",\"baseDate\"],\"relationOnUpdate\":\"NoAction\",\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"companyName\",\"baseDate\",\"jobType\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"PensionEmployeeInfo\":{\"dbName\":\"pension_employee_info\",\"schema\":null,\"fields\":[{\"name\":\"companyName\",\"dbName\":\"company_name\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"baseDate\",\"dbName\":\"base_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"employeeId\",\"dbName\":\"employee_id\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"gender\",\"dbName\":\"gender\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"birthDate\",\"dbName\":\"birth_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"hireDate\",\"dbName\":\"hire_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"calculationStartDate\",\"dbName\":\"calculation_start_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"averageSalary\",\"dbName\":\"average_salary\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"12\",\"2\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"jobType\",\"dbName\":\"job_type\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":true,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"paymentMultiplier\",\"dbName\":\"payment_multiplier\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"5\",\"2\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"estimatedSeverancePay\",\"dbName\":\"estimated_severance_pay\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":false,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"12\",\"2\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"company\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionCompanyInfo\",\"nativeType\":null,\"relationName\":\"PensionCompanyInfoToPensionEmployeeInfo\",\"relationFromFields\":[\"companyName\",\"baseDate\"],\"relationToFields\":[\"companyName\",\"baseDate\"],\"relationOnUpdate\":\"NoAction\",\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"jobTypeInfo\",\"kind\":\"object\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"PensionJobTypeInfo\",\"nativeType\":null,\"relationName\":\"PensionEmployeeInfoToPensionJobTypeInfo\",\"relationFromFields\":[\"companyName\",\"baseDate\",\"jobType\"],\"relationToFields\":[\"companyName\",\"baseDate\",\"jobType\"],\"relationOnUpdate\":\"NoAction\",\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"companyName\",\"baseDate\",\"employeeId\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"PensionFinancialAssumption\":{\"dbName\":\"pension_financial_assumption\",\"schema\":null,\"fields\":[{\"name\":\"assumptionBaseDate\",\"dbName\":\"assumption_base_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"bondType\",\"dbName\":\"bond_type\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"bondRating\",\"dbName\":\"bond_rating\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"maturity\",\"dbName\":\"maturity\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"5\",\"2\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"yieldToMaturity\",\"dbName\":\"yield_to_maturity\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"7\",\"5\"]],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"assumptionBaseDate\",\"bondType\",\"bondRating\",\"maturity\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false},\"PensionDemographicAssumption\":{\"dbName\":\"pension_demographic_assumption\",\"schema\":null,\"fields\":[{\"name\":\"assumptionBaseDate\",\"dbName\":\"assumption_base_date\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"DateTime\",\"nativeType\":[\"Date\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"demographicAssumption\",\"dbName\":\"demographic_assumption\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"String\",\"nativeType\":[\"NVarChar\",[\"50\"]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"age\",\"dbName\":\"age\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Int\",\"nativeType\":[\"SmallInt\",[]],\"isGenerated\":false,\"isUpdatedAt\":false},{\"name\":\"demographicRate\",\"dbName\":\"demographic_rate\",\"kind\":\"scalar\",\"isList\":false,\"isRequired\":true,\"isUnique\":false,\"isId\":false,\"isReadOnly\":false,\"hasDefaultValue\":false,\"type\":\"Decimal\",\"nativeType\":[\"Decimal\",[\"7\",\"5\"]],\"isGenerated\":false,\"isUpdatedAt\":false}],\"primaryKey\":{\"name\":null,\"fields\":[\"assumptionBaseDate\",\"demographicAssumption\",\"age\"]},\"uniqueFields\":[],\"uniqueIndexes\":[],\"isGenerated\":false}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined


const { warnEnvConflicts } = require('@prisma/client/runtime/library.js')

warnEnvConflicts({
    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath)
})

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node");
path.join(process.cwd(), "node_modules/.prisma/client/query_engine-windows.dll.node")
// file annotations for bundling tools to include these files
path.join(__dirname, "schema.prisma");
path.join(process.cwd(), "node_modules/.prisma/client/schema.prisma")
